apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: storegateway
    app.kubernetes.io/instance: thanos
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: thanos
  name: thanos-storegateway
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: storegateway
      app.kubernetes.io/instance: thanos
      app.kubernetes.io/name: thanos
  template:
    metadata:
      labels:
        app.kubernetes.io/component: storegateway
        app.kubernetes.io/instance: thanos
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: thanos
    spec:
      automountServiceAccountToken: true
      containers:
        - args:
            - store
            - '--log.level=info'
            - '--log.format=logfmt'
            - '--grpc-address=0.0.0.0:10901'
            - '--http-address=0.0.0.0:10902'
            - '--data-dir=/data'
            - '--objstore.config-file=/conf/objstore.yml'
          image: 'quay.io/thanos/thanos:v0.35.0'
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 6
            httpGet:
              path: /-/healthy
              port: http
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 30
          name: storegateway
          ports:
            - containerPort: 10902
              name: http
              protocol: TCP
            - containerPort: 10901
              name: grpc
              protocol: TCP
          readinessProbe:
            failureThreshold: 6
            httpGet:
              path: /-/ready
              port: http
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 30
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1001
          volumeMounts:
            - mountPath: /conf
              name: objstore-config
            - mountPath: /data
              name: data
      securityContext:
        fsGroup: 1001
      serviceAccount: thanos-storegateway
      volumes:
        - name: objstore-config
          secret:
            secretName: secret
            items:
              - key: "objstore.yml"
                path: "objstore.yml"
        - emptyDir: {}
          name: data
