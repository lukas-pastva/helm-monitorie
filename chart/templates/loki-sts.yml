{{ if eq .Values.loki.enabled true -}}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app.kubernetes.io/instance: loki
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: loki
  name: loki
  namespace: {{ .Release.Namespace }}
spec:
  podManagementPolicy: Parallel
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/instance: loki
      app.kubernetes.io/name: loki
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: loki
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: loki
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app.kubernetes.io/component: single-binary
                  app.kubernetes.io/instance: {{ include "helmMonitorie.name" . }}-loki
                  app.kubernetes.io/name: loki
              topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
        - args:
          - '-config.file=/etc/loki/config/config.yaml'
          - '-target=all'
          - '-config.expand-env=true'
          env:
            - name: S3_LOKI_ENDPOINT
              valueFrom:
                secretKeyRef:
                  key: S3_LOKI_ENDPOINT
                  name: secret
            - name: S3_LOKI_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  key: S3_LOKI_ACCESS_KEY_ID
                  name: secret
            - name: S3_LOKI_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  key: S3_LOKI_SECRET_ACCESS_KEY
                  name: secret
          image: 'docker.io/grafana/loki:2.9.0'
          imagePullPolicy: IfNotPresent
          name: loki
          ports:
            - containerPort: 3100
              name: http-metrics
              protocol: TCP
            - containerPort: 9095
              name: grpc
              protocol: TCP
            - containerPort: 7946
              name: http-memberlist
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: http-metrics
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 100Mi
            requests:
              cpu: 30m
              memory: 30Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
          volumeMounts:
            - mountPath: /tmp
              name: tmp
            - mountPath: /etc/loki/config
              name: config
            - mountPath: /etc/loki/runtime-config
              name: runtime-config
            - mountPath: /{{ .Values.loki.path_prefix }}
              name: storage
      enableServiceLinks: true
      securityContext:
        fsGroup: 10001
        runAsGroup: 10001
        runAsNonRoot: true
        runAsUser: 10001
      serviceAccountName: loki
      terminationGracePeriodSeconds: 30
      volumes:
        - emptyDir: {}
          name: tmp
        - configMap:
            defaultMode: 420
            items:
              - key: config.yaml
                path: config.yaml
            name: loki
          name: config
        - configMap:
            defaultMode: 420
            name: loki-runtime-cm
          name: runtime-config
  updateStrategy:
    rollingUpdate:
      partition: 0
  volumeClaimTemplates:
    - metadata:
        name: storage
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 2Gi
{{ end }}