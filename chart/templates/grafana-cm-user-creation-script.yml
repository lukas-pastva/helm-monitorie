apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-user-creation-script
  namespace: {{ .Release.Namespace }}
data:
  create-users.sh: |
    #!/bin/sh
    echo "Checking for the existence of the secret..."
    if [ -f /etc/grafana-users-secret/GRAFANA_USERS ]; then
      echo "Secret exists. Proceeding to create users..."
      USERS=$(cat /etc/grafana-users-secret/GRAFANA_USERS)
      echo "Waiting for Grafana to be ready..."
      RETRIES=0
      until wget --spider --quiet http://localhost:3000/api/health; do
        RETRIES=$((RETRIES+1))
        if [ $RETRIES -ge 30 ]; then
          echo "Grafana is not ready after multiple attempts. Exiting."
          exit 1
        fi
        sleep 5
      done
      echo "Grafana is ready. Creating users..."
      for user in $(echo $USERS | jq -c '.[]'); do
        name=$(echo $user | jq -r '.name')
        email=$(echo $user | jq -r '.email')
        password=$(echo $user | jq -r '.password')
        role=$(echo $user | jq -r '.role')
        echo "Creating user $name with role $role"
        USER_RESPONSE=$(wget --quiet --method=POST --header="Content-Type: application/json" --body-data="{\"name\":\"$name\",\"email\":\"$email\",\"login\":\"$name\",\"password\":\"$password\"}" --output-document - http://$GF_SECURITY_ADMIN_USER:$GF_SECURITY_ADMIN_PASSWORD@localhost:3000/api/admin/users)
        USER_ID=$(echo $USER_RESPONSE | grep -o '"id":[0-9]*' | grep -o '[0-9]*')
        echo "Setting role for user $name to $role"
        wget --quiet --method=PUT --header="Content-Type: application/json" --body-data="{\"role\":\"$role\"}" --output-document - http://$GF_SECURITY_ADMIN_USER:$GF_SECURITY_ADMIN_PASSWORD@localhost:3000/api/orgs/1/users/${USER_ID}
      done
    else
      echo "Secret does not exist. Skipping user creation."
    fi
