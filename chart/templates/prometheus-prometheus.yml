apiVersion: monitoring.coreos.com/v1
kind: Prometheus
metadata:
  labels:
    app: kube-prometheus-stack-prometheus
    app.kubernetes.io/instance: {{ include "helmMonitorie.name" . }}
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: {{ include "helmMonitorie.name" . }}
    app.kubernetes.io/version: {{ .Chart.Version }}
    argocd.argoproj.io/instance: {{ include "helmMonitorie.name" . }}
    chart: {{ include "helmMonitorie.name" . }}-{{ .Chart.Version }}
    heritage: Helm
    release: {{ include "helmMonitorie.name" . }}
  name: prometheus
  namespace: {{ .Release.Namespace }}
spec:
  alerting:
    alertmanagers:
      - apiVersion: v2
        name: alertmanager
        namespace: sys-monitoring
        pathPrefix: /
        port: http-web
  enableAdminAPI: false
  externalLabels:
    datacenter: fcm
  externalUrl: 'http://prometheus.{{ .Release.Namespace }}:9090'
  hostNetwork: false
  image: 'quay.io/prometheus/prometheus:v2.40.5'
  listenLocal: false
  logFormat: logfmt
  logLevel: info
  paused: false
  podMonitorNamespaceSelector: {}
  podMonitorSelector:
    matchLabels:
      release: {{ include "helmMonitorie.name" . }}
  portName: http-web
  probeNamespaceSelector: {}
  probeSelector:
    matchLabels:
      release: {{ include "helmMonitorie.name" . }}
  replicas: 1
  resources:
    limits:
      cpu: 500m
      memory: 500Mi
    requests:
      cpu: 150m
      memory: 200Mi
  retention: 10d
  routePrefix: /
  ruleNamespaceSelector: {}
  ruleSelector:
    matchLabels:
      release: {{ include "helmMonitorie.name" . }}
  securityContext:
    fsGroup: 2000
    runAsGroup: 2000
    runAsNonRoot: true
    runAsUser: 1000
  serviceAccountName: prometheus
  serviceMonitorNamespaceSelector: {}
  serviceMonitorSelector:
    matchLabels:
      release: {{ include "helmMonitorie.name" . }}
  shards: 1
  thanos:
    image: 'quay.io/thanos/thanos:v0.32.2'
    objectStorageConfig:
      key: objstore.yml
      name: thanos-objectstorage
  version: v2.40.5
  walCompression: false
