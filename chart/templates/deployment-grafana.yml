apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: grafana
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: grafana
    app.kubernetes.io/version: {{ .Chart.Version }}
    argocd.argoproj.io/instance: grafana
    helm.sh/chart: {{ include "helmMonitorie.name" . }}-{{ .Chart.Version }}
  name: grafana
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/instance: grafana
      app.kubernetes.io/name: grafana
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: grafana
        app.kubernetes.io/name: grafana
    spec:
      automountServiceAccountToken: true
      containers:
        - env:
            - name: METHOD
              value: WATCH
            - name: LABEL
              value: grafana_dashboard
            - name: LABEL_VALUE
              value: grafana
            - name: FOLDER
              value: /tmp/dashboards
            - name: RESOURCE
              value: both
            - name: REQ_USERNAME
              valueFrom:
                secretKeyRef:
                  key: admin-user
                  name: grafana
            - name: REQ_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: admin-password
                  name: grafana
            - name: REQ_URL
              value: 'http://localhost:3000/api/admin/provisioning/dashboards/reload'
            - name: REQ_METHOD
              value: POST
          image: 'quay.io/kiwigrid/k8s-sidecar:1.21.0'
          imagePullPolicy: IfNotPresent
          name: grafana-sc-dashboard
          volumeMounts:
            - mountPath: /tmp/dashboards
              name: sc-dashboard-volume
        - env:
            - name: GF_SECURITY_ADMIN_USER
              valueFrom:
                secretKeyRef:
                  key: admin-user
                  name: grafana
            - name: GF_SECURITY_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: admin-password
                  name: grafana
            - name: GF_PATHS_DATA
              value: /var/lib/grafana/
            - name: GF_PATHS_LOGS
              value: /var/log/grafana
            - name: GF_PATHS_PLUGINS
              value: /var/lib/grafana/plugins
            - name: GF_PATHS_PROVISIONING
              value: /etc/grafana/provisioning
          image: 'grafana/grafana:10.0.5'
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 10
            httpGet:
              path: /api/health
              port: 3000
            initialDelaySeconds: 60
            timeoutSeconds: 30
          name: grafana
          ports:
            - containerPort: 3000
              name: grafana
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /api/health
              port: 3000
          resources:
            limits:
              cpu: 200m
              memory: 150Mi
            requests:
              cpu: 70m
              memory: 100Mi
          volumeMounts:
            - mountPath: /etc/grafana/grafana.ini
              name: config
              subPath: grafana.ini
            - mountPath: /var/lib/grafana
              name: storage
            - mountPath: /etc/grafana/provisioning/datasources/datasources.yaml
              name: config
              subPath: datasources.yaml
            - mountPath: /tmp/dashboards
              name: sc-dashboard-volume
            - mountPath: /etc/grafana/provisioning/dashboards/sc-dashboardproviders.yaml
              name: sc-dashboard-provider
              subPath: provider.yaml
      enableServiceLinks: true
      securityContext:
        fsGroup: 472
        runAsGroup: 472
        runAsUser: 472
      serviceAccountName: grafana
      volumes:
        - configMap:
            name: grafana
          name: config
        - emptyDir: {}
          name: storage
        - emptyDir: {}
          name: sc-dashboard-volume
        - configMap:
            name: grafana-dashboards
          name: sc-dashboard-provider
