apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: grafana
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: grafana
    app.kubernetes.io/version: {{ .Chart.Version }}
    argocd.argoproj.io/instance: grafana
    helm.sh/chart: {{ include "helmMonitorie.name" . }}-{{ .Chart.Version }}
  name: grafana
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: grafana
      app.kubernetes.io/name: grafana
  template:
    metadata:
      labels:
        checksum-config: {{ include (print $.Template.BasePath "/grafana-configmap-config.yml") . | sha256sum | trunc 63 | trimSuffix "-" }}
        #checksum-dashboards: {{ include (print $.Template.BasePath "/grafana-configmap-dashboards.yml") . | sha256sum | trunc 63 | trimSuffix "-" }}
        app.kubernetes.io/instance: grafana
        app.kubernetes.io/name: grafana
    spec:
      automountServiceAccountToken: true
      containers:
        - env:
            - name: GF_SECURITY_ADMIN_USER
              value: {{ .Values.grafana.adminUsername }}
            - name: GF_SECURITY_ADMIN_PASSWORD
              value: {{ .Values.grafana.adminPassword }}
            - name: GF_PATHS_DATA
              value: /var/lib/grafana/
            - name: GF_PATHS_LOGS
              value: /var/log/grafana
            - name: GF_PATHS_PLUGINS
              value: /var/lib/grafana/plugins
            - name: GF_PATHS_PROVISIONING
              value: /etc/grafana/provisioning
          image: 'grafana/grafana:10.0.5'
          livenessProbe:
            failureThreshold: 10
            httpGet:
              path: /api/health
              port: 3000
            initialDelaySeconds: 60
            timeoutSeconds: 30
          name: grafana
          ports:
            - containerPort: 3000
              name: grafana
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /api/health
              port: 3000
          resources:
            limits:
              cpu: 200m
              memory: 150Mi
            requests:
              cpu: 30m
              memory: 30Mi
          volumeMounts:
            - mountPath: /etc/grafana/grafana.ini
              name: grafana
              subPath: grafana.ini
            - mountPath: /etc/grafana/provisioning/datasources/datasources.yaml
              name: grafana
              subPath: datasources.yaml
            - mountPath: /etc/grafana/provisioning/dashboards
              name: grafana-dashboard
      enableServiceLinks: true
      securityContext:
        fsGroup: 472
        runAsGroup: 472
        runAsUser: 472
      serviceAccountName: grafana
      volumes:
        - configMap:
            name: grafana
          name: grafana
        - configMap:
            name: grafana-dashboard
          name: grafana-dashboard
