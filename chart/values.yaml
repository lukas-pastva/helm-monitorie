kube-prometheus-stack:
  crds:
    enabled: false
  coreDns:
    enabled: false
  kubeDns:
    enabled: false
  kubeEtcd:
    enabled: false
  kubeScheduler:
    enabled: false
  kubeProxy:
    enabled: false
  kubeControllerManager:
    enabled: false
  kubelet:
    enabled: false
  kubeApiServer:
    enabled: false
  nodeExporter:
    enabled: false
  kube-state-metrics:
    replicas: 0
  defaultRules:
    create: false
  prometheus:
    serviceMonitor:
      selfMonitor: false
    thanosService:
      enabled: true
    prometheusSpec:
      resources:
        limits:
          cpu: 600m
          memory: 1000Mi
        requests:
          cpu: 250m
          memory: 400Mi
      thanos:
        image: quay.io/thanos/thanos:v0.32.2
        objectStorageConfig:
          key: "objstore.yml"
          name: "thanos-objectstorage"
      externalLabels:
        datacenter: fcm
      walCompression: false
    ingress:
      enabled: false
  prometheusOperator:
    serviceMonitor:
      enabled: false
    resources:
      limits:
        cpu: 200m
        memory: 200Mi
      requests:
        cpu: 100m
        memory: 100Mi
    enabled: true
    tls:
      enabled: true
  alertmanager:
    serviceMonitor:
      selfMonitor: false
    alertmanagerSpec:
      resources:
        limits:
          cpu: 300m
          memory: 300Mi
        requests:
          cpu: 100m
          memory: 100Mi
    config:
      global:
        resolve_timeout: 5m
        slack_api_url: "https://hooks.slack.com/services/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"

thanos:
  query:
    stores:
      - dnssrv+_grpc._tcp.{{ .Release.Namespace }}-kube-promet-thanos-discovery.{{ .Release.Namespace }}.svc.cluster.local:10901
    replicaLabel:
      - prometheus_replica
    resources:
      limits:
        cpu: 200m
        memory: 200Mi
      requests:
        cpu: 100m
        memory: 100Mi
  queryFrontend:
    resources:
      limits:
        cpu: 200m
        memory: 200Mi
      requests:
        cpu: 100m
        memory: 100Mi
  compactor:
    enabled: true
    persistence:
      enabled: false
    resources:
      limits:
        cpu: 200m
        memory: 200Mi
      requests:
        cpu: 100m
        memory: 100Mi
  storegateway:
    enabled: true
    persistence:
      enabled: false
    #resources:
    #  limits:
    #    cpu: 1000m
    #    memory: 1000Mi
    #  requests:
    #    cpu: 500m
    #    memory: 500Mi
  metrics:
    enabled: false
    serviceMonitor:
      enabled: false
    prometheusRule:
      enabled: false
  existingObjstoreSecret: "thanos-objectstorage"