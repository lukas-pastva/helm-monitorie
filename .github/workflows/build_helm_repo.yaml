name: Helm Publish

on: 
  workflow_dispatch:
  push:
    tags:
      - '*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Install Helm
        uses: azure/setup-helm@v1
        with:
          version: v3.5.1

      - name: Get Tag from Git Describe
        id: get_tag
        run: |
          TAG_NAME=$(git describe --tags --abbrev=0)
          echo "TAG_NAME=${TAG_NAME}" >> $GITHUB_ENV
          echo "::set-output name=TAG_NAME::${TAG_NAME}"

      - name: Update Chart Version
        run: |
          sed -i "s/^version:.*/version: ${{ env.TAG_NAME }}/" chart/Chart.yaml

      - name: Package Helm Chart
        run: |
          helm package chart
          helm repo index . --url https://github.com/lukas-pastva/helm-monitorie --merge index.yaml

      - name: List Files for Debugging
        run: ls -la

      - name: Set Helm Experimental OCI Environment Variable
        run: echo "HELM_EXPERIMENTAL_OCI=1" >> $GITHUB_ENV

      - name: Login to GitHub Container Registry
        run: echo ${{ secrets.PAT }} | helm registry login -u $GITHUB_ACTOR --password-stdin ghcr.io

      - name: Push Helm Chart to GitHub Packages
        run: |
          helm chart save ./helm-monitorie-${{ env.TAG_NAME }}.tgz ghcr.io/lukas-pastva/helm-monitorie:${{ env.TAG_NAME }}
          helm chart push ghcr.io/lukas-pastva/helm-monitorie:${{ env.TAG_NAME }}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
        with:
          tag_name: ${{ env.TAG_NAME }}
          release_name: "Helm Chart Release ${{ env.TAG_NAME }}"
          draft: false
          prerelease: false

      - name: Upload Helm Chart as Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./helm-monitorie-${{ env.TAG_NAME }}.tgz
          asset_name: helm-monitorie-${{ env.TAG_NAME }}.tgz
          asset_content_type: application/gzip

      - name: Upload Index.yaml as Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./index.yaml
          asset_name: index.yaml
          asset_content_type: application/x-yaml
